#!/bin/bash

export FLUME_HOME=/opt/flume
export FLUME_CONF_DIR=$FLUME_HOME/conf
export PATH=$PATH:$FLUME_HOME/bin
export CLOUD=<%= @location.split("/").last %>
export MGMT_DOMAIN=<%= @collector_domain %>

log_dir=/opt/oneops/log
if [ $2 ] ; then
  log_dir=$2
fi

process_regex="$log_dir.*35855"

start() {
	RETAIL_BIN=/opt/flume/bin/retail_dashf

	if [ ! -e $RETAIL_BIN ] ; then
		echo "requires retail in $RETAIL_BIN"
	fi
	
	# cleanup flume dirs
	find /tmp -mtime +7 -maxdepth 1 | grep flume- | xargs rm -fr
	
    p_count=`pgrep -lf $process_regex|wc -l`
    if [ $p_count -gt 0 ] ; then
        echo "looks like $process_regex already running:"
        pgrep -lf $process_regex
        echo "did not start inductor flume agent."
    else		
	    mkdir -p $log_dir
	    echo "log agent for $log_dir/inductor.log to collector: $CLOUD.collector.$MGMT_DOMAIN";
	    exec nohup flume node -1 -n 'localhost' -c "localhost: exec(\"$RETAIL_BIN $log_dir/inductor.log\") |  { value(\"ip\",\"$IP\") => agentDFOSink(\"$CLOUD.collector.$MGMT_DOMAIN\",35855) };" > $log_dir/inductor_logsink_agent.log 2>&1 &
    fi        
}

stop() {
    pkill -f $process_regex
    pkill -f retail.*$log_dir    
    sleep 2
    p_count=`pgrep -lf $process_regex | wc -l`
    if [ $p_count -gt 0 ] ; then
            echo "pkill -9 -f $process_regex because its still up after 2sec"               
            pkill -9 -f $process_regex
    fi

    p_count=`pgrep -lf $process_regex | wc -l`
    if [ $p_count -gt 0 ] ; then
            echo "still running after the kill -9"
            status
            exit 2
    else
       echo "log agent down"            
    fi
}

status() {
    p_id=`pgrep -f $process_regex| sed 'N;s/\n/\|/'`
    if [ "$p_id" == "" ]; then
        echo "log agent not running"
        exit 1
    fi
	p_count=`lsof -i | egrep "$p_id" | grep 35855 | grep EST | wc -l`
	if [ $p_count -lt 1 ] ; then
		echo "log agent not connected to collector. lsof -i | egrep \"$p_id\" | grep 35855 | grep EST | wc -l returns 0"
		exit 1
	else
	   echo "log agent up"
	fi    
}

case $1 in
	start)       
		start
		;; 
	stop) 
		stop
		;;
	restart)
		stop
		start
		;;
	status)
		status
		;;
	*)
		echo "Usage: $0 {start|stop|restart|status}"
		exit 2
		;;
	esac                                                                                      
