---
variables:

platforms:

  # links to

  searchmq:
    pack: oneops/activemq:1

  # searchdb
  searchdb:
    pack: oneops/es:1
    major_version: 1
    links:
    - searchmq
    variables:
     distbase: $OO_GLOBAL{DISTBASE}
     version: $OO_GLOBAL{VERSION}
     install_dir: $OO_GLOBAL{INSTALL-DIR}
    components:
      secgroup/oneops.1.Secgroup:
        secgroup:
          inbound:
          - 9200 9400 tcp 0.0.0.0/0
          - 5000 5000 tcp 0.0.0.0/0
          - 22 22 tcp 0.0.0.0/0
      compute/oneops.1.Compute:
        compute:
          size: L
          ostype: centos-7.2
      elasticsearch/oneops.1.Es:
        elasticsearch:
          cluster_name: oneops
          shards: 4
          replicas: 2
          custom_config:
            http.cors.allow-origin: '"/.*/"'
            http.cors.enabled: 'true'
          version: 1.5.0
          cloud_rack_zone_map:
      file/oneops.1.File:
        logstash-cert:
          path: /opt/.certs/logstash.crt
          content: |-
        logstash-key:
          path: /opt/.certs/logstash.key
          content: |-
          depends:
          - logstash-cert
      daemon/oneops.1.Daemon:
        search:
          service_name: search
          control_script_content: |-
            #!/bin/bash
            # Search
            # chkconfig: 2345 90 10
            # description: OneOps Search

            # VERSION: $OO_GLOBAL{VERSION}
            check_status() {

              s=`ps aux | grep '[s]earch.jar' | awk '{print $2}'`

              if [ $s ] ; then
                echo $s
                return $s
              fi
              return 0

            }

            start() {

              check_status

              pid=$?

              if [ $pid -ne 0 ] ; then
                echo "OneOps search application is already started"
                exit 0
              fi

              echo -n "Starting oneops search application: "

              java -jar -Dindex.name=cms-v5 -Dnodes=localhost:9300 -Damq.pass=$OO_GLOBAL{AMQPASS} $OO_LOCAL{INSTALLDIR}/current/oneops/dist/search.jar -Dsun.net.spi.nameservice.provider.1=dns,sun -Dsun.net.spi.nameservice.provider.2=default -Damq.connect_string="failover:(ssl://kloopzmq:61617?keepAlive=true)?initialReconnectDelay=1000&startupMaxReconnectAttempts=2&jms.prefetchPolicy.queuePrefetch=1" >> /opt/oneops/log/search.log 2>&1 &
              echo "OK"
            }

            stop() {

              pid=`ps aux | grep '[s]earch.jar' | awk '{print $2}'`

              if [[ -z "$pid" ]] ; then
                echo "OneOps Search Application is already stopped"
                exit 0
              fi

              echo -n "Stopping oneops search application: "
              kill -9 $pid &
              echo "OK"
            }

            status() {

              check_status

              if [ $? -ne 0 ] ; then
                echo "Oneops search is running.."
              else
                echo "Oneops search is stopped.."
              fi

            }

            case "$1" in
              start)
                start
                ;;
              stop)
                stop
                ;;
              status)
                status
                ;;
              restart|reload)
                stop
                start
                ;;
              *)
                echo "Usage: $0 {start|stop|restart|reload|status}"
                exit 1
            esac

            exit 0
          control_script_location: /etc/init.d/search
      artifact/oneops.1.Artifact:
        search-artifact:
          install_dir: /opt/oneops/search
          location: $OO_LOCAL{distbase}/oneops-$OO_LOCAL{version}.tar.gz
          version: $OO_LOCAL{version}
          url: $OO_LOCAL{distbase}/oneops-$OO_LOCAL{version}.tar.gz
          repository: '*Using full RepoURL*'
      index/oneops.1.Index:
        cms:
          index_name: cms
        event:
          index_name: event
      logstash/oneops.1.Logstash:
        logstash:
          outputs:
          - elasticsearch { host => "localhost" port => "9300" cluster => "oneops"
            protocol => "transport" }
          inputs:
          - lumberjack { port => 5000 ssl_certificate => "/opt/.certs/logstash.crt"
            ssl_key => "/opt/.certs/logstash.key" type => "lumberjack" }
      job/oneops.1.Job:
        cronjob:
          hour: 1
          description: cron job to delete logs older than 1 days from /usr/local/var/log/elasticsearch/
          cmd: /usr/bin/find /usr/local/var/log/elasticsearch/ -type f -mtime +0 -exec rm {} \;
