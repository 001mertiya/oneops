---
variables:

platforms:

# amqdb
  amqdb:
    pack: oneops/postgresql:1
    major_version: 1
    variables:
      dbuser: amq
      dbpass: amq
    components:
      secgroup/oneops.1.Secgroup:
        secgroup:
          inbound:
            - '22 22 tcp 0.0.0.0/0'
            - '5432 5432 tcp 0.0.0.0/0'
      compute/oneops.1.Compute:
        compute:
          size: M
          ostype: centos-7.2
          repo_list:
            - 'yum -y localinstall https://download.postgresql.org/pub/repos/yum/9.2/redhat/rhel-7-x86_64/pgdg-centos94-9.2-2.noarch.rpm'
      postgresql/oneops.1.Postgresql:
        postgresql:
          version: 9.2
          postgresql_conf:
            tcp_keepalives_count: 5
            tcp_keepalives_idle: 60
            tcp_keepalives_interval: 5
            max_connections: 1000
      database/oneops.1.Database:
        amqdb:
          password: $OO_LOCAL{dbpass}
          dbname: amqdb
          username: $OO_LOCAL{dbuser}

  # amq
  amq:
    pack: oneops/activemq:1
    major_version: 1
    links:
      - amqdb
    variables:
      broker-cert-location: /var/lib/certs/broker.ks
      broker-cert-pass: '::ENCRYPTED::'
      amqpass: change*me
      dbuser: amq
      dbpass: amq
    components:
      secgroup/oneops.1.Secgroup:
        secgroup:
          inbound:
          - 22 22 tcp 0.0.0.0/0
          - 61616 61617 tcp 0.0.0.0/0
          - 8161 8162 tcp 0.0.0.0/0
      compute/oneops.1.Compute:
        compute:
          size: L
          ostype: centos-7.2
      certificate/oneops.1.Certificate:
        broker-cert:
          cacertkey:
          passphrase:
          cert:
          key:
      keystore/oneops.1.Keystore:
        broker-keystore:
          keystore_password:
          keystore_filename: $OO_LOCAL{broker-cert-location}
      topic/Topic:
        topic-cms-all:
          topicname: CMS.ALL
      queue/Queue:
        queue-controller-wo:
          queuename: CONTROLLER.WO
        queue-notifications:
          queuename: NOTIFICATIONS
        queue-response:
          queuename: controller.response
        queue-search:
          queuename: search.stream
        queue-sensor-mgmt:
          queuename: sensor-mgmt
      artifact/Artifact:
        amq-artifact:
          install_dir: /opt/oneops/artifact
          password: '::ENCRYPTED::'
          restart: |-
            service "activemq" do
              action :restart
            end
          location: $OO_LOCAL{distbase}/oneops-$OO_LOCAL{version}.tar.gz
          configure: |-
            execute "cp /opt/oneops/artifact/releases/$OO_LOCAL{version}/oneops/dist/amqplugin-fat.jar /opt/activemq/lib/"
          version: $OO_LOCAL{version}
          url: $OO_LOCAL{distbase}/oneops-$OO_LOCAL{version}.tar.gz
      activemq/Activemq:
        activemq:
          brokerauthenabled: 'true'
          maxmemory: '4096'
          adminconsolesecure: 'true'
          initmemory: '4096'
          adminconsolekeystorepassword: '::ENCRYPTED::'
          brokerpassword: '::ENCRYPTED::'
          adminpassword: '::ENCRYPTED::'
          environment:
            KLOOPZ_AMQ_PASS: $OO_LOCAL{amqpass}
          brokerusername: system
          adminconsolekeystore: file:$OO_LOCAL{broker-cert-location}
          transportconnector:
            nio: nio://0.0.0.0:61616
            nio+ssl: nio+ssl://0.0.0.0:61617
          authenabled: 'true'
          adminconsoleport: '8162'
          adminusername: admin
          attachments:
            activemq-config:
              path: /opt/activemq/conf/activemq.xml
              exec_cmd: service activemq restart
              priority: '1'
              content: |-
                <beans
                  xmlns="http://www.springframework.org/schema/beans"
                  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd">

                  <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
                    <property name="locations">
                      <value>file:${activemq.conf}/credentials.properties</value>
                    </property>
                  </bean>

                  <bean id="cmsClient" class="com.oneops.amq.plugins.CMSClient">
                    <property name="restTemplate" ref="restTemplate"/>
                    <property name="serviceUrl" value="http://cmsapi:8080/adapter/rest/"/>
                  </bean>

                  <bean id="postgres-ds" class="org.postgresql.ds.PGPoolingDataSource" destroy-method="close">
                    <property name="serverName" value="amqdb"/>
                    <property name="databaseName" value="amqdb"/>
                    <property name="portNumber" value="5432"/>
                    <property name="user" value="$OO_LOCAL{dbuser}"/>
                    <property name="password" value="$OO_LOCAL{dbpass}"/>
                    <property name="dataSourceName" value="postgres"/>
                    <property name="initialConnections" value="5"/>
                    <property name="maxConnections" value="30"/>
                    <property name="tcpKeepAlive" value="true"/>
                  </bean>

                  <bean id="jsonMessageConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
                    <property name="supportedMediaTypes" value="application/json"/>
                  </bean>

                  <bean class="org.springframework.web.client.RestTemplate" id="restTemplate">
                    <property name="messageConverters">
                      <list>
                        <ref bean="jsonMessageConverter"/>
                      </list>
                    </property>
                  </bean>

                  <broker xmlns="http://activemq.apache.org/schema/core" brokerName="localhost" useJmx="true" dataDirectory="${activemq.data}">

                    <destinationInterceptors>
                      <virtualDestinationInterceptor>
                        <virtualDestinations>
                          <compositeTopic name="CMS.ALL" forwardOnly="false">
                            <forwardTo>
                              <filteredDestination selector="source='deployment' OR source='release'" queue="CONTROLLER.WO"/>
                              <filteredDestination selector="source='opsprocedure'" queue="CONTROLLER.AO"/>
                            </forwardTo>
                          </compositeTopic>
                        </virtualDestinations>
                      </virtualDestinationInterceptor>
                    </destinationInterceptors>

                    <destinationPolicy>
                      <policyMap>
                        <policyEntries>
                          <policyEntry topic=">" producerFlowControl="false" memoryLimit="256mb">
                            <pendingSubscriberPolicy>
                              <vmCursor/>
                            </pendingSubscriberPolicy>
                          </policyEntry>
                          <policyEntry queue="CONTROLLER.AO" producerFlowControl="false" usePrefetchExtension="false" prioritizedMessages="true"/>
                          <policyEntry queue="controller.response" producerFlowControl="false" usePrefetchExtension="false" prioritizedMessages="true"/>
                          <policyEntry queue=">" producerFlowControl="false" usePrefetchExtension="false">
                          </policyEntry>
                        </policyEntries>
                      </policyMap>
                    </destinationPolicy>

                    <destinations>
                      <queue physicalName="CONTROLLER.WO"/>
                      <queue physicalName="CONTROLLER.AO"/>
                    </destinations>

                    <managementContext>
                      <managementContext createConnector="false"/>
                    </managementContext>

                    <persistenceAdapter>
                      <jdbcPersistenceAdapter dataSource="#postgres-ds" lockKeepAlivePeriod="10000">
                        <locker>
                          <lease-database-locker lockAcquireSleepInterval="20000" leaseHolderId="${ONEOPS_COMPUTE_CI_ID}"/>
                        </locker>
                      <statements>
                        <property xmlns="http://www.springframework.org/schema/beans" name="createSchemaStatements">
                          <list>
                            <value>
                              CREATE TABLE ACTIVEMQ_MSGS
                              (ID BIGINT NOT NULL,
                              PRIORITY BIGINT,
                              XID VARCHAR(250),
                              CONTAINER VARCHAR(250),
                              MSGID_PROD VARCHAR(250),
                              MSGID_SEQ BIGINT,
                              EXPIRATION BIGINT,
                              MSG BYTEA, PRIMARY KEY ( ID ) )
                            </value>
                            <value>CREATE INDEX ACTIVEMQ_MSGS_MIDX ON ACTIVEMQ_MSGS (MSGID_PROD,MSGID_SEQ)</value>
                            <value>CREATE INDEX ACTIVEMQ_MSGS_XIDX ON ACTIVEMQ_MSGS (XID)</value>
                            <value>CREATE INDEX ACTIVEMQ_MSGS_CIDX ON ACTIVEMQ_MSGS (CONTAINER)</value>
                            <value>CREATE INDEX ACTIVEMQ_MSGS_EIDX ON ACTIVEMQ_MSGS (EXPIRATION)</value>
                            <value>CREATE INDEX ACTIVEMQ_MSGS_PIDX ON ACTIVEMQ_MSGS (PRIORITY)</value>
                            <value>
                              CREATE TABLE ACTIVEMQ_ACKS
                              (CONTAINER VARCHAR(250) NOT NULL,
                              SUB_DEST VARCHAR(250),
                              CLIENT_ID VARCHAR(250) NOT NULL,
                              SUB_NAME VARCHAR(250) NOT NULL,
                              SELECTOR VARCHAR(250),
                              LAST_ACKED_ID BIGINT,
                              PRIORITY BIGINT DEFAULT 5 NOT NULL,
                              XID VARCHAR(250),
                              PRIMARY KEY ( CONTAINER, CLIENT_ID, SUB_NAME,PRIORITY))
                            </value>
                            <value>CREATE INDEX ACTIVEMQ_ACKS_XIDX ON ACTIVEMQ_ACKS (XID)</value>
                          </list>
                        </property>
                      </statements>
                    </jdbcPersistenceAdapter>
                  </persistenceAdapter>

                  <sslContext>
                    <sslContext keyStore="$OO_LOCAL{broker-cert-location}" keyStorePassword="$OO_LOCAL{broker-cert-pass}"/>
                  </sslContext>

                  <plugins>
                    <bean xmlns="http://www.springframework.org/schema/beans" id="authorizationPlugin" class="com.oneops.amq.plugins.OneopsAuthPlugin">
                      <property name="cms" ref="cmsClient"/>
                    </bean>
                  </plugins>

                  <systemUsage>
                    <memoryUsage>
                      <memoryUsage percentOfJvmHeap="70"/>
                    </memoryUsage>
                    <storeUsage>
                      <storeUsage limit="100 gb"/>
                    </storeUsage>
                    <tempUsage>
                      <tempUsage limit="50 gb"/>
                    </tempUsage>
                  </systemUsage>

                  <transportConnectors>
                    <transportConnector name="openwire-ssl"  uri="ssl://0.0.0.0:61617"/-->
                    <transportConnector name="nio" uri="nio://0.0.0.0:61616"/>
                    <transportConnector name="nio+ssl" uri="nio+ssl://0.0.0.0:61617"/>
                  </transportConnectors>

                  <shutdownHooks>
                    <bean xmlns="http://www.springframework.org/schema/beans" class="org.apache.activemq.hooks.SpringContextHook" />
                  </shutdownHooks>

                </broker>

                <import resource="jetty.xml"/>

              </beans>
              run_on: after-add,after-replace,after-update
